#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          httpbin
# Required-Start:    $network $local_fs
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: test server 
# Description: web sever provide request verification
### END INIT INFO

# Author: Kenneth Reitz

. /lib/lsb/init-functions

DAEMON="httpbin"
DAEMON_BASE="httpbin"
DAEMON_HOME="/usr/local/httpbin"
PID_NAME="/var/run/httpbin/run.pid"
#SOCK_FILE="/var/run/blabla"

#----------
# functions
#----------
is_running () {
  if [ -e $PID_NAME ];
  then
	  CUR_PID=`cat $PID_NAME`
		RUN=`ps aux | grep $CUR_PID | grep -v grep | wc -l`
		if [ $RUN -eq 1 ];
		then
      echo 1
    fi
  fi
}

#-----
# main
#-----

# remove sock file if unused
if [ ! -f $SOCK_FILE ]; then
    SOCK_USED=`lsof $SOCK_FILE 2>/dev/null | wc -l`
    if [ $SOCK_USED -eq 0 ]; then
        rm -f $SOCK_FILE
    fi
fi

case "$1" in
  start)
    if [ $(is_running) ];
    then
      log_failure_msg "$DAEMON already running"
    else
    	log_begin_msg "Starting $DAEMON..."
      	uf=$DAEMON_HOME"deploy/ulimit.conf"
      	if [ -x $uf ]; then
        	log_action_msg "Loading ulimits from file" $uf
        	. $uf
      	fi
        # virtualenv enabling
        source $DAEMON_HOME"/deploy/httpbin_venv/bin/activate"

        # start WSGI daemon 
	      cd $DAEMON_HOME"/httpbin"
	      gunicorn --bind=0.0.0.0:18080 --pid=$PID_NAME --workers 2 --keep-alive=65 --user=httpbin --daemon httpbin:app 
    fi
  ;;

  stop)
    log_begin_msg "Stopping $DAEMON..."
    start-stop-daemon --quiet --retry 10 --stop --pidfile $PID_NAME
    log_end_msg $?
    rm -f $PID_NAME 2>/dev/null
    #rm -f /var/run/blabla/twisted_json.sock 2>/dev/null
  ;;

  restart)
    log_begin_msg "Restarting $DAEMON..."
    $0 stop
    sleep 1
    $0 start
  ;;

  #debug)
  #  $DAEMON_HOME/usr/stargazer-control.py --config $CONFIG_NAME --pid $PID_NAME
  #;;

  status)
    if [ $(is_running) ];
    then
      CUR_PID=`cat $PID_NAME`
      RUNNING_FROM=`ps -eo pid,lstart | grep $CUR_PID | awk '{print $2" "$3" "$4" "$5}'`
      LISTEN=`lsof -p $CUR_PID | grep "LISTEN" | awk '{print $8" "$9}'`
      THREAD_NUM=`ps -p $CUR_PID -T | grep -c  -v "PID"`
      printf "%15s: %s\n%15s: %s\n%15s: %s\n%15s: %s\n" "Running from" "$RUNNING_FROM" "PID" "$CUR_PID" "Listen" "$LISTEN" "Thread Num" "$THREAD_NUM"
    else
      echo "Stoped"
    fi
  ;; 
*)
  log_success_msg "Usage $0 {start|stop|restart}"
  exit 1

esac

exit 0
#----
# eof
#----
