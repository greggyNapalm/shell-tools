user  nginx;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  30000;
}

worker_rlimit_nofile 4424;

http {
    # includes
    include       mime.types;
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    log_format  timed_combined  '$remote_addr - $remote_user [$time_local]  '
                                '"$status" $body_bytes_sent '
                                '$request_time $upstream_response_time  '
                                '$request "$http_referer" "$http_user_agent"';

    access_log  logs/access.log  timed_combined;


    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    proxy_read_timeout 5;

    proxy_next_upstream error;

    #gzip on;
    #gzip_min_length 1000;
    #gzip_proxied any;
    #gzip_types text/plain text/html text/css text/xml
    #           application/x-javascript application/xml
    #           application/atom+xml text/javascript;

    # ruby
    passenger_root /usr/local/rvm/gems/ruby-1.9.3-p0/gems/passenger-3.0.11;
    passenger_ruby /usr/local/rvm/wrappers/ruby-1.9.3-p0/ruby;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # favicon
        location /favicon.ico {
            #root         /some_path/api_frontend;
            #expires      max;
            return 204;
            access_log     off;
            log_not_found  off;
        }

        location = /nginx_status {
            stub_status on;
            access_log off;
        }

        # reverse proxy headers 
        #location / {
        #    proxy_pass_header Server;
        #    proxy_set_header Host $http_host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Scheme $scheme;
        #    proxy_pass http://frontends;
        #}

        #server {
        #   listen 80;
        #   server_name www.yourhost.com;
        #   root /somewhere/public;   # <--- be sure to point to 'public'!
        #   passenger_enabled on;
        #}
    }
}
